/**
<% it.parameters.forEach((parameter) => { %>
* @param <%= `{${parameter?.original?.type || 'any'}}`.padEnd(10, ' ') %> <%= `[${parameter.name}]`.padEnd(15, ' ') %> <%= parameter.optional ? ' ' : '[required]' %> <%= parameter.name !== parameter.originalName ? `(API name: ${parameter.originalName})` : '' %> <%= parameter?.original?.description || '' %>

<% }); -%>
*/
<%= it.name %>(
{
<% it.parameters.forEach((parameter) => { %>
<%= parameter.name %>,
<% }); %>
}
:{<% it.parameters.forEach((parameter) => { %>
<%= parameter.name %>: <%~ parameter.type %> <%= parameter.optional ? '| null | undefined' : '' %>,
<% }); %>},
$config?: AxiosRequestConfig
): AxiosPromise<<%~ it.returnType %>> {
  let url = '<%= it.url %>';
  <% if(it.pathParams && it.pathParams.length > 0) {
  it.pathParams.forEach((parameter) => { %>
  url = url.replace('{<%= parameter.name %>}', encodeURIComponent("" + <%= parameter.name %>));
  <% });
} %>
  <% if(it.formData && it.formData.length > 0) { %>
  const formDataBody = new FormData();
  <% it.formData.forEach((parameter) => { %>
  if (!!<%= parameter.name %>) {
  <% if(parameter.original && parameter.original.type === 'array') { %>
  <%= parameter.name %>.forEach((f: any) => formDataBody.append("<%= parameter.originalName %>", f));
  <% } else { %>
  formDataBody.append("<%= parameter.originalName %>", <%= parameter.name %><%= parameter.type !== 'string' && parameter.type !== 'File' && parameter.type !== 'Blob' ? '.toString()' : '' %>);
  <% } %>
  }
  <% });
} %>

  return axios.request<<%~ it.returnType %>>({
    url: url,
    method: '<%= it.method %>',
    <% if(it.formData && it.formData.length > 0) { %>
    data: formDataBody,
    <% } else if(it.body) { %>
    data: <%= it.body.name %>,
    <% } %>
    <% if(it.query && it.query.length > 0) { %>
    params: {
    <% it.query.forEach((parameter) => { %>
    '<%= parameter.originalName %>': serializeQueryParam(<%= parameter.name %>),
    <% }); %>
    },
    <% } %>
    <% if(it.headers && it.headers.length > 0) { %>
    headers: {
    <% it.headers.forEach((parameter) => { %>
    <% if (parameter.value) { %>
    '<%= parameter.originalName %>': '<%= parameter.value %>',
    <% } else { %>
    '<%= parameter.originalName %>': <%= parameter.name %>,
    <% } %>
    <% }); %>
    },
    <% } %>
    WAITING_REPLACED_BASE_URL
    ...$config,
    });
    },